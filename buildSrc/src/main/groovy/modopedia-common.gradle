plugins {
    id "modopedia-convention"
    id "maven-publish"
}

VersionCatalog libs = project.extensions.getByType(VersionCatalogsExtension).named("libs")

String mcVersion = libs.findVersion("minecraft").get()

repositories {
    mavenCentral()
}

// Declare capabilities on the outgoing configurations.
// Read more about capabilities here: https://docs.gradle.org/current/userguide/component_capabilities.html#sec:declaring-additional-capabilities-for-a-local-component
["apiElements", "runtimeElements", "sourcesElements", "javadocElements"].each { variant ->
    configurations."$variant".outgoing {
        capability("net.favouriteless.modopedia:${base.archivesName.get()}:$version")
        capability("net.favouriteless.modopedia:modopedia-${project.name}-$mcVersion:$version")
        capability("net.favouriteless.modopedia:modopedia:$version")
    }
    publishing.publications.configureEach {
        suppressPomMetadataWarningsFor(variant)
    }
}

sourcesJar {
    from(rootProject.file("LICENSE")) {
        rename { "${it}_Modopedia" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }

    repositories {
        if(System.getenv("FAVOURITELESS_MAVEN_USER") == null || System.getenv("FAVOURITELESS_MAVEN_PASS") == null) {
            mavenLocal()
        }
        else maven {
            name = "FavouritelessReleases"
            url = "https://maven.favouriteless.net/releases"

            credentials {
                username = System.getenv("FAVOURITELESS_MAVEN_USER")
                password = System.getenv("FAVOURITELESS_MAVEN_PASS")
            }
        }
    }
}