import net.darkhax.curseforgegradle.TaskPublishCurseForge
import net.darkhax.curseforgegradle.UploadArtifact

plugins {
    id 'modopedia-loader'

    alias libs.plugins.moddevgradle
    alias libs.plugins.minotaur
    alias libs.plugins.curseforgegradle
}

String mcVersion = libs.versions.minecraft.asProvider().get()

configurations {
    runtimeClasspath.extendsFrom localRuntimeOnly
}

dependencies {
    compileOnly libs.jei.neoforge.api

    runtimeOnly libs.jei.neoforge
    localRuntimeOnly project(":test_books")
}

neoForge {
    version = libs.versions.neoforge.asProvider().get()

    accessTransformers = project(":common").files("src/main/resources/META-INF/accesstransformer.cfg")

    parchment {
        minecraftVersion = libs.versions.parchment.minecraft.get()
        mappingsVersion = libs.versions.parchment.asProvider().get()
    }

    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', "modopedia")
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
            gameDirectory = project.file("runs/$name")
        }

        client {
            client()
            programArguments.addAll(
                    "--username", "Favouriteless",
                    "--uuid", "9410df73-6be3-41d5-a620-51b2e9be667b"
            )
        }

        server {
            server()
            programArgument("--nogui")
        }

        String output = project(":common").file("src/generated/resources/").absolutePath
        String existing = project(":common").file("src/main/resources/").absolutePath

        data {
            data()
            programArguments.addAll(
                    "--mod", "modopedia", "--all",
                    "--output", output,
                    "--existing", existing
            )
        }
    }

    mods {
        "modopedia" {
            sourceSet sourceSets.main
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") ?: "Invalid/No API Token Found"

    projectId = "SYrakyVL"
    versionName = "Neoforge $mcVersion"
    versionNumber = project.version.toString()
    versionType = project.version.toString().endsWith("beta") ? "beta" : "release"
    uploadFile = tasks.jar
    changelog = rootProject.file("changelog.txt").getText("UTF-8")
    loaders = ["neoforge"]
    gameVersions = [mcVersion]

    //debugMode = true
    //https://github.com/modrinth/minotaur#available-properties
}

tasks.register("curseforge", TaskPublishCurseForge) {
    group = "publishing"
    apiToken = System.getenv("CURSEFORGE_TOKEN") ?: "Invalid/No API Token Found"

    UploadArtifact main = upload(1132038, tasks.jar)
    main.releaseType = project.version.toString().endsWith("beta") ? "beta" : "release"
    main.changelog = rootProject.file("changelog.txt").getText("UTF-8")

    main.addModLoader("NeoForge")
    main.addGameVersion(mcVersion)
    main.addJavaVersion("Java 21")

    //debugMode = true
    //https://github.com/Darkhax/CurseForgeGradle#available-properties
}

tasks.named("publish", DefaultTask).configure {
    finalizedBy "modrinth"
    finalizedBy "curseforge"
}
